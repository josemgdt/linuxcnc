Muestra cómo los ciclos pueden estar hechos de subrutinas O-word o codificados directamente en Python.

# Supongamos que G84.2 se remapea a Python como g842, por lo que en la sección ini [RS274NGC]:
# REMAP=G84.2 argspec=xyzqp python=g842 modalgroup=1
#
# luego, al ejecutar
#
#    G84.2 x1 y1 (linea1)
#    x3 y3       (linea2)
#    y5          (linea3)
#    ...
#
# se ejecutará como:
#   *G84.2 x1 y1
#    G84.2 x3 y3
#    G84.2 x3 y5
#
# hasta que se limpia el movimiento con G80 o se ejecuta algún otro movimiento.
#
# Esto permite escribir ciclos en Python, o como procedimientos Oword; en el
# último caso, self.motion_mode debe establecerse en el epílogo de Python.
#

Y lo mismo en un procedimiento Oword:

# un ciclo con una sub Oword
# REMAP=G84.3 modalgroup=1 argspec=xyzqp prolog=g843_prolog ngc=g843 epilog=g843_epilog


Los ejemplos solo muestran los parámetros que reciben, y no hacen nada útil: solo "entender la idea". Los parámetros sticky se manejan adecuadamente.

Uso:

linuxcnc cycle.ini

Pulse run y vea qué ocurre.

Para entender cómo encajan las cosas:

- vea las instrucciones REMAP en cycle.ini
- python/remap.py contiene el codigo de union de Python
- nc_subroutines/g843.ngc es un ejemplo de "cuerpo de ciclo"

